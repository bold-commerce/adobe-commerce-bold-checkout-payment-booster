name: Pull Request
run-name: Run Integration Tests

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.github/dependabot.*'
      - '**/*.md'
      - '**/*.txt'

permissions:
  contents: read

jobs:
  setup-and-run-carol:
    strategy:
      fail-fast: false
      matrix:
        include:
          # - php-version : "7.2"
          #   magento-version: "2.3.5-p2"
          #   composer-version: "v1"
          #   maria-db-version: "10.4"
          - php-version: "7.4"
            magento-version: "2.4.3-p3"
            composer-version: "v2"
            maria-db-version: "10.4"
#          - php-version: "8.1"
#            magento-version: "2.4.4-p13"
#            composer-version: "v2"
#            maria-db-version: "10.6"
#          - php-version: "8.1"
#            magento-version: "2.4.5-p12"
#            composer-version: "v2"
#            maria-db-version: "10.6"
#          - php-version: "8.2"
#            magento-version: "2.4.6-p10"
#            composer-version: "v2"
#            maria-db-version: "10.6"
#          - php-version: "8.3"
#            magento-version: "2.4.7-p5"
#            composer-version: "v2"
#            maria-db-version: "10.6"
          - php-version: "8.3"
            magento-version: "2.4.8"
            composer-version: "v2"
            maria-db-version: "10.6"
    runs-on: ubuntu-latest
    timeout-minutes: 20
    services:
      mariadb:
        image: mariadb:${{ matrix.maria-db-version }}
        env:
          MYSQL_PASSWORD: root
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: magento_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis:7.2
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli -h localhost -p 6379 ping" --health-interval=10s --health-timeout=5s --health-retries=10
      opensearch:
        image: opensearchproject/opensearch:2.12.0
        env:
          OPENSEARCH_INITIAL_ADMIN_PASSWORD: magento2Root!
          discovery.type: single-node
          DISABLE_SECURITY_PLUGIN: true
        ports:
          - 9200:9200
        options: --health-cmd="curl --silent --show-error --fail -ku admin:magento2Root! http://localhost:9200/_cluster/health || exit 1" --health-interval=10s --health-timeout=10s --health-retries=10
      rabbitmq:
        image: rabbitmq:3.13
        ports:
          - 5672:5672
        options: --health-cmd="rabbitmq-diagnostics -q ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Setup ${{ matrix.php-version}}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version}}
          tools: composer:${{ matrix.composer-version }}

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: integration-pipeline-test/vendor
          key: ${{ runner.os }}-php-${{ matrix.php-version }}-magento-${{ matrix.magento-version }}

      - name: add-credentials
        working-directory: integration-pipeline-test
        run: |
          composer config --global http-basic.repo.magento.com ${{ secrets.COMPOSER_MAGENTO_USERNAME }} ${{ secrets.COMPOSER_MAGENTO_PASSWORD }}
          composer config --global github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}

      - name: get-magento
        working-directory: integration-pipeline-test
        run: |
          META_PACKAGE=magento/project-community-edition META_VERSION=${{ matrix.magento-version }}

          composer create-project ${{ matrix.composer-version == 'v2' && '--no-install' || null}} --repository-url=https://repo.magento.com/ \
              "${META_PACKAGE}" /tmp/exampleproject "${META_VERSION}"

          rsync -a /tmp/exampleproject/ ./
          rm -rf /tmp/exampleproject/

      - name: allow-plugins
        if: matrix.composer-version != 'v1'
        working-directory: integration-pipeline-test
        run: |
          composer config --no-plugins allow-plugins.dealerdirect/phpcodesniffer-composer-installer true
          composer config --no-plugins allow-plugins.laminas/laminas-dependency-plugin true
          composer config --no-plugins allow-plugins.magento/* true
          composer config --no-plugins allow-plugins.php-http/discovery true

      - name: install-deps
        working-directory: integration-pipeline-test
        run: |
          composer config repositories.adobe-commerce-bold-checkout-payment-booster vcs git@github.com:bold-commerce/adobe-commerce-bold-checkout-payment-booster.git
          composer require bold-commerce/module-checkout-payment-booster:dev-test-integration --no-scripts
          composer install --prefer-dist --no-progress --no-suggest
          composer require --dev dms/phpunit-arraysubset-asserts --no-scripts

      - name: install-php8-deps
        if: matrix.php-version >= '8'
        working-directory: integration-pipeline-test
        run: |
          composer require --dev colinodell/psr-testlogger --no-scripts

      - name: copy needed configs
        working-directory: integration-pipeline-test
        run: |
          cp install-config-mysql-ci-${{ matrix.magento-version }}.php dev/tests/integration/etc/install-config-mysql.php
          cp dev/tests/integration/etc/config-global.php.dist dev/tests/integration/etc/config-global.php
          cp dev/tests/integration/phpunit.xml.dist dev/tests/integration/phpunit.xml

      - name: add-DB
        working-directory: integration-pipeline-test
        run: |
          mysql -h 127.0.0.1 -u root -proot -e "CREATE DATABASE magento_integration_tests;"

      - name: run the test
        working-directory: integration-pipeline-test
        run: |
          vendor/bin/phpunit -vvv -c $(pwd)/dev/tests/integration/phpunit.xml vendor/bold-commerce/module-checkout-payment-booster/Test/Integration
